@using BlazorSvgEditor.SvgEditor.Helper

<circle cx=@X cy=@Y r="@((7 * ScaleFactor).ToInvariantString())" stroke-width="@((2 * ScaleFactor).ToInvariantString())" stroke="white" fill="@MiddleColor" @onpointerdown=OnPointerDown @ondblclick="OnDoubleClick" style="cursor: @CssCursor" />
<circle cx=@X cy=@Y r="@((4 * ScaleFactor).ToInvariantString())" stroke-width="@((2.5 * ScaleFactor).ToInvariantString())" stroke="@RingColor" fill="transparent" style="pointer-events:none;" />

@code {

    [Parameter]
    public EventCallback<PointerEventArgs> OnPointerDown { get; set; }
    
    [Parameter]
    public EventCallback<MouseEventArgs> OnDoubleClick { get; set; }

    [Parameter, EditorRequired]
    public Coord<double> Position { get; set; }

    [Parameter]
    public string RingColor { get; set; } = "#ff8c00"; //Oraange

    [Parameter]
    public string MiddleColor { get; set; } = "white";

    [Parameter]
    public double ScaleFactor { get; set; } = 1;

    [Parameter]
    public string CssCursor { get; set; } = "pointer";
    
    private string X => Position.X.ToInvariantString();

    private string Y => Position.Y.ToInvariantString();

    private string _State { get; set; } = string.Empty;

    private string State => $"{Position.X}{Position.Y}{RingColor}{MiddleColor}";

    protected override bool ShouldRender()
    {
        if (_State != State)
        {
            _State = State;
            return true;
        }
        return false;
    }

}